name: 'Creds'

on:
  workflow_dispatch:
    inputs: 
      func_name:
        description: 'Input function name'
        default: 'none'
        required: true        
  
jobs:
  Enviro: 
    name: 'Environement variable'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: checking branch
        id: branch_checker
        run: |
          if [ "${{ github.ref }}" = "refs/heads/production_branch" ]; then
            echo "::set-output name=AWS_ACCESS_KEY_ID::${{secrets.PRODUCTION_AWS_ACCESS_KEY_ID}}"
            echo "::set-output name=AWS_SECRET_ACCESS_KEY::${{secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY}}"
          else
            echo "::set-output name=AWS_ACCESS_KEY_ID::${{secrets.DEV_AWS_ACCESS_KEY_ID}}"
            echo "::set-output name=AWS_SECRET_ACCESS_KEY::${{secrets.DEV_AWS_SECRET_ACCESS_KEY}}"
          fi         
        
    outputs:
      AWS_ACCESS_KEY_ID: ${{steps.branch_checker.outputs.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{steps.branch_checker.outputs.AWS_SECRET_ACCESS_KEY}}
    
  Creating_resources:
    name: 'resources'
    runs-on: ubuntu-latest
    environment: production
    needs: [Enviro]
    env: 
      AWS_ACCESS_KEY_ID: ${{needs.Enviro.outputs.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{needs.Enviro.outputs.AWS_SECRET_ACCESS_KEY}}
      AWS_REGION: "ap-southeast-1"
  
    defaults:
      run:
        shell: bash

    steps:    
#     - name: Checkout
#       uses: actions/checkout@v3
      
#     - name: Terraform Init
#       run: terraform init

#     - name: Terraform Plan
#       run: terraform plan -input=false

#     - name: Terraform Apply
#       run: terraform apply -auto-approve -input=false
      
#     - name: aws command
#       run: aws aws lambda invoke --function-name ${{github.event.inputs.func_name}} --log-type outputfile.txt

      - name: echo
        run: ${{github.event.inputs.func_name}} 
        
        
      
